<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="19231" started-at="2018-12-12T12:04:38Z" finished-at="2018-12-12T12:04:57Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="19231" started-at="2018-12-12T12:04:38Z" finished-at="2018-12-12T12:04:57Z">
      <class name="scripts.abc">
        <test-method status="FAIL" signature="a()[pri:0, instance:scripts.abc@4667ae56]" name="a" duration-ms="16" started-at="2018-12-12T17:34:38Z" finished-at="2018-12-12T17:34:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.fail(Assert.java:100)
	at scripts.abc.a(abc.java:11)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
      </class> <!-- scripts.abc -->
      <class name="scripts.TestValidLogin">
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:scripts.TestValidLogin@204f30ec]" name="launchApplication" is-config="true" duration-ms="6023" started-at="2018-12-12T17:34:38Z" finished-at="2018-12-12T17:34:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="PASS" signature="testValidLogin()[pri:1, instance:scripts.TestValidLogin@204f30ec]" name="testValidLogin" duration-ms="1996" started-at="2018-12-12T17:34:44Z" finished-at="2018-12-12T17:34:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method status="PASS" signature="closeApplication(org.testng.ITestResult)[pri:0, instance:scripts.TestValidLogin@204f30ec]" name="closeApplication" is-config="true" duration-ms="1144" started-at="2018-12-12T17:34:46Z" finished-at="2018-12-12T17:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=TestValidLogin.testValidLogin()[pri:1, instance:scripts.TestValidLogin@204f30ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- scripts.TestValidLogin -->
      <class name="scripts.TestInvalidLogin">
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:scripts.TestInvalidLogin@77cd7a0]" name="launchApplication" is-config="true" duration-ms="3993" started-at="2018-12-12T17:34:47Z" finished-at="2018-12-12T17:34:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="PASS" signature="testInvalidLogin()[pri:2, instance:scripts.TestInvalidLogin@77cd7a0]" name="testInvalidLogin" duration-ms="5004" started-at="2018-12-12T17:34:51Z" finished-at="2018-12-12T17:34:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method status="PASS" signature="closeApplication(org.testng.ITestResult)[pri:0, instance:scripts.TestInvalidLogin@77cd7a0]" name="closeApplication" is-config="true" duration-ms="1016" started-at="2018-12-12T17:34:56Z" finished-at="2018-12-12T17:34:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=TestInvalidLogin.testInvalidLogin()[pri:2, instance:scripts.TestInvalidLogin@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- scripts.TestInvalidLogin -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
